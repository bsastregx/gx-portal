let headerBurger, headerNav;
const contentLoaded = () => {
    (headerBurger = document.getElementById("header-burger")),
      (headerNav = document.getElementById("header-nav"));
    const e = document.getElementById("saia");
    e?.classList.remove("saia-hidden");
    const t = document.querySelectorAll("#header-nav .header__list-item");
    t?.forEach((e) => {
      e.addEventListener("mouseenter", function () {
        e.classList.add("header__list-item--hovered");
      }),
        e.addEventListener("mouseleave", function () {
          e.classList.add("header__list-item--animated"),
            setTimeout(() => {
              e.classList.add("header__list-item--no-transition"),
                e.classList.remove("header__list-item--animated"),
                e.classList.remove("header__list-item--hovered"),
                setTimeout(() => {
                  e.classList.remove("header__list-item--no-transition");
                }, 10);
            }, 260);
        });
    }),
      headerBurger?.addEventListener("click", () => {
        headerBurger?.classList.toggle("active"),
          headerNav?.classList.toggle("active");
      });
    const n = [];
    let a;
    const r = document.querySelectorAll("#steps section");
    r?.length &&
      r.forEach((e, t) => {
        const o = e.querySelector("img");
        o && (o.classList.add("animate", "animate--hidden"), n.push(o)),
          t === r.length - 1 && (a = e);
      }),
      io(n);
    const o = () => {
      const e = a.querySelector("img");
      setTimeout(() => {
        e.classList.remove("animate--hidden");
      }, 250);
    };
    a &&
      (a.addEventListener("mouseenter", o),
      a.addEventListener("touchstart", o));
    const s = document.getElementById("back-to-top");
    s?.addEventListener("click", function () {
      window.scrollTo(0, 0);
    }),
      window.addEventListener("message", function (e) {
        if (
          "hsFormCallback" === e.data.type &&
          "onFormReady" === e.data.eventName
        ) {
          firstFormItem = document.querySelector(
            ".hbspt-form .hs-form-field .hs-input"
          );
          document
            .querySelectorAll(".hs_country select option")
            .forEach((e) => {
              const t = e.textContent;
              t.length > 25 && (e.textContent = `${t.slice(0, 25)}...`);
            });
        }
      });
    const c = document.querySelectorAll(".go-to-form");
    c?.forEach((e) => {
      e.addEventListener("click", (e) => {
        const t = document.querySelector(".hbspt-form input");
        t?.focus();
      });
    });
    document.querySelectorAll('img[loading="lazy"]').forEach((e) => {
      e.setAttribute("loading", "eager");
    }),
      handleScroll(),
      window.addEventListener("scroll", handleScroll);
    const d = document.querySelectorAll("[data-en]"),
      i = document.getElementById("header-langs");
    i.addEventListener("click", function () {
      const e = i.getAttribute("data-current-lang");
      let t;
      "es" === e ? (t = "en") : "en" === e && (t = "es"),
        i.setAttribute("data-current-lang", t),
        l(t);
    });
    const l = (e) => {
        d?.forEach((t) => {
          const n = t.getAttribute("data-en"),
            a = t.getAttribute("data-es");
          "es" === e && a
            ? (t.textContent = a)
            : "en" === e && n && (t.textContent = n);
        });
      },
      u = (e) => {
        const t = e.key.toLowerCase();
        if (
          ((h = (h + t).replaceAll(" ", "")), console.log(h), h.includes(m))
        ) {
          (document.getElementById("header-langs").style.display = "flex"),
            document.removeEventListener("keydown", u);
        }
      },
      m = "idiomas";
    let h = "";
    document.addEventListener("keydown", u);
    document.querySelectorAll("#header-navbar a").forEach((e) => {
      e.addEventListener("click", function () {
        headerBurger?.classList.remove("active"),
          headerNav?.classList.remove("active");
      });
    });
  },
  io = (e) => {
    let t = new IntersectionObserver(
      function (e, n) {
        e.forEach(function (e) {
          let n = e.target;
          e.isIntersecting &&
            (n.classList.remove("animate--hidden"), t.unobserve(n));
        });
      },
      { rootMargin: "0px 0px -35% 0px", threshold: 0.35 }
    );
    e.forEach(function (e) {
      t.observe(e);
    });
  };
function handleScroll() {
  const e = document.querySelector("#saia .header__container");
  window.scrollY <= 500
    ? e.classList.remove("header__container--thinner")
    : e.classList.add("header__container--thinner"),
    recalculateHeaderNavbarHeight(),
    headerBurger?.classList.remove("active"),
    headerNav?.classList.remove("active");
}
const recalculateHeaderNavbarHeight = () => {
  const e = document.getElementById("header-navbar"),
    t = e?.clientHeight;
  document
    .querySelector("html")
    .style.setProperty("--saia-navbar-height", t + "px");
};
document.addEventListener("DOMContentLoaded", () => {
  contentLoaded();
}),
  (window.onresize = recalculateHeaderNavbarHeight);
